name: Stage-2 Real Test

on:
  push:
    branches: [ main, stage2-* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  STAGING_HOST: ${{ secrets.STAGING_URL }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_REF_HASH: ${{ secrets.SENTRY_HASH }}

jobs:
  real-test:
    name: Stage 2 Real Verification
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        attempt: [1, 2, 3]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install k6 & Lighthouse
      run: |
        sudo apt-get update -y
        sudo apt-get install -y k6 chromium-browser
        npm i -g lighthouse
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Clean placeholder files
      run: rm -rf performance/*

    - name: Run k6
      run: |
        mkdir -p performance
        k6 run --vus 10 --duration 5m \
          --out json=performance/basic-load-raw.json \
          performance/basic-load-test.js
        k6 run --vus 10 --duration 2m \
          --out json=performance/upload-stress-raw.json \
          performance/upload-stress-test.js

    - name: Run Lighthouse (desktop & mobile)
      run: |
        lighthouse https://$STAGING_HOST \
          --output html --output-path performance/lh-desktop.html \
          --quiet --chrome-flags="--headless"
        lighthouse https://$STAGING_HOST \
          --output html --output-path performance/lh-mobile.html \
          --preset=mobile --quiet --chrome-flags="--headless"

    - name: Capture Sentry screenshot
      run: node scripts/capture-sentry.js
      
    - name: Hash Sentry screenshot
      run: |
        HASH=$(sha256sum performance/sentry-screenshot.png | cut -d ' ' -f 1)
        echo "Sentry hash: $HASH"
        echo "Reference hash: $SENTRY_REF_HASH"
        if [ "$HASH" != "$SENTRY_REF_HASH" ] && [ -n "$SENTRY_REF_HASH" ]; then
          echo "❌ Sentry hash mismatch"
          exit 1
        fi

    - name: Verify no placeholder content
      run: |
        if grep -i "urandom\|PLACEHOLDER" performance/*; then
          echo "❌ Placeholder content detected"
          exit 1
        else
          echo "✅ No placeholder content detected"
        fi
      
    - name: Verify Stage-2
      run: node performance/verify_stage2.mjs
      
    - name: Check file sizes
      run: |
        # Check minimum file sizes
        JSON_MIN_SIZE=5000
        HTML_MIN_SIZE=50000
        PNG_MIN_SIZE=10000
        
        for JSON_FILE in performance/*.json; do
          SIZE=$(wc -c < "$JSON_FILE")
          if [ "$SIZE" -lt "$JSON_MIN_SIZE" ]; then
            echo "❌ $JSON_FILE too small ($SIZE bytes, minimum $JSON_MIN_SIZE)"
            exit 1
          else
            echo "✅ $JSON_FILE size: $SIZE bytes"
          fi
        done
        
        for HTML_FILE in performance/*.html; do
          SIZE=$(wc -c < "$HTML_FILE")
          if [ "$SIZE" -lt "$HTML_MIN_SIZE" ]; then
            echo "❌ $HTML_FILE too small ($SIZE bytes, minimum $HTML_MIN_SIZE)"
            exit 1
          else
            echo "✅ $HTML_FILE size: $SIZE bytes"
          fi
        done
        
        for PNG_FILE in performance/*.png; do
          SIZE=$(wc -c < "$PNG_FILE")
          if [ "$SIZE" -lt "$PNG_MIN_SIZE" ]; then
            echo "❌ $PNG_FILE too small ($SIZE bytes, minimum $PNG_MIN_SIZE)"
            exit 1
          else
            echo "✅ $PNG_FILE size: $SIZE bytes"
          fi
        done
        
    - name: Display status on failure
      if: failure() && matrix.attempt == 3
      run: |
        echo "========================================"
        echo "❌ HELP NEEDED - Stage 2 verification failed after 3 attempts"
        echo "========================================"
        exit 1
        
    - name: Verification Complete
      if: success()
      run: |
        echo "========================================="
        echo "✅ Stage-2 REAL PASS - ALL CHECKS SUCCESSFUL"
        echo "========================================="