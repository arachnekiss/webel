name: Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      env:
        CI: true
        
    - name: Build project
      run: npm run build
      env:
        CI: true
        
    - name: Check build results
      run: echo "Checking build artifacts" && ls -la dist/ || echo "dist directory not found"
      
    - name: Check client build
      run: echo "Checking client build" && ls -la client/dist/ || echo "client/dist directory not found" 
    
    - name: Setup environment variables
      run: echo "Setting up environment variables" && export DATABASE_URL="${{ secrets.DATABASE_URL }}" && echo "DATABASE_URL=$DATABASE_URL" > .env.production && echo "NODE_ENV=production" >> .env.production && echo "SKIP_MIGRATION=true" >> .env.production && cp .env.production env.production
    
    - name: Install drizzle-kit
      run: echo "Installing drizzle-kit" && npm install -g drizzle-kit
    
    - name: Run database migrations
      run: echo "Running migrations" && DATABASE_URL="${{ secrets.DATABASE_URL }}" drizzle-kit push:pg || echo "Migration had issues (continuing)"
    
    - name: Generate SQL migration
      run: echo "Generating SQL" && DATABASE_URL="${{ secrets.DATABASE_URL }}" drizzle-kit generate:pg --out=./migration.sql || echo "SQL generation had issues (continuing)"
    
    - name: Create deployment directory
      run: echo "Creating deployment directory" && DEPLOY_DIR="deploy_package" && rm -rf $DEPLOY_DIR || true && mkdir -p $DEPLOY_DIR
    
    - name: Copy server files
      run: echo "Copying server files" && if [ -d dist ]; then cp -r dist/* deploy_package/; fi
    
    - name: Copy client files
      run: echo "Copying client files" && mkdir -p deploy_package/client && if [ -d client/dist ]; then cp -r client/dist deploy_package/client/; else mkdir -p deploy_package/client/src && cp -r client/src deploy_package/client/; fi
    
    - name: Copy configuration files
      run: echo "Copying configuration files" && cp package.json package-lock.json deploy_package/ && cp startup.js patch-helper.js deploy_package/ || true && cp web.config .deployment deploy_package/ || true && cp drizzle.config.ts deploy_package/ || true
    
    - name: Copy environment files
      run: echo "Copying environment files" && cp .env.production deploy_package/ || true && cp env.production deploy_package/ || true
    
    - name: Copy migration script
      run: echo "Copying migration script" && if [ -f migration.sql ]; then cp migration.sql deploy_package/; fi
    
    - name: Create necessary directories
      run: echo "Creating directories" && mkdir -p deploy_package/public/images deploy_package/public/static deploy_package/server deploy_package/shared deploy_package/uploads deploy_package/temp
    
    - name: Copy shared directory
      run: echo "Copying shared directory" && cp -r shared/* deploy_package/shared/ || echo "Shared directory copy issue"
    
    - name: Copy public directory
      run: echo "Copying public directory" && if [ -d public ]; then cp -r public/* deploy_package/public/ || echo "Public directory copy issue"; fi
    
    - name: Create compatibility file
      run: echo "Creating compatibility file" && echo "// Azure Kudu compatibility file" > deploy_package/server/startup.js && echo "import '../startup.js';" >> deploy_package/server/startup.js && chmod +x deploy_package/server/startup.js && chmod +x deploy_package/startup.js || true
    
    - name: Copy node_modules
      run: echo "Copying node_modules" && cp -r node_modules deploy_package/
    
    - name: Move to deployment directory
      run: echo "Moving to deployment directory" && rm -rf deployment || true && mv deploy_package deployment
    
    - name: Optimize node_modules
      run: echo "Optimizing node_modules" && cd deployment && find node_modules -name "*.md" -delete 2>/dev/null || true && find node_modules -name "*.d.ts" -delete 2>/dev/null || true && find node_modules -name "*.map" -delete 2>/dev/null || true
    
    - name: Create ZIP package
      run: echo "Creating ZIP package" && cd deployment && zip -r ../deploy.zip * -x "*.git*" "*.github*" "node_modules/.cache/*" "node_modules/.bin/*" && cd ..
    
    - name: Check ZIP file
      run: echo "Checking ZIP file" && du -h deploy.zip
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./deploy.zip
        clean: true
        restart: true
        
    - name: Deployment complete
      run: echo "Deployment completed successfully" && echo "App URL: https://${{ secrets.AZURE_WEBAPP_NAME }}.azurewebsites.net"