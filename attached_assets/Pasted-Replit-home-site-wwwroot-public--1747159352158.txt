Replit 에이전트, 아래 지침에 따라 `/home/site/wwwroot/public` 경로에서 파일 충돌 문제를 완전 해결하고 성공적으로 배포를 완료하세요:

---

### 🔴 에러 발생 내용

```plaintext
Error: ENOTDIR: not a directory, mkdir '/home/site/wwwroot/public/images'
경로 /home/site/wwwroot/public이(가) 파일로 존재합니다. 파일을 삭제하고 디렉터리를 생성합니다.
디렉토리 생성됨: /home/site/wwwroot/public
디렉토리 생성됨: /home/site/wwwroot/public/images
...
Error: ENOTDIR: not a directory, mkdir '/home/site/wwwroot/public/images'
```

---

### ⚠️ 원인 분석

1. **ZIP 배포 패키지에 루트 `public` 이름으로 된 “파일”이 포함**되어 있어, Azure가 `/public`을 파일로 먼저 생성합니다.
2. 이후 스크립트에서 `/public`을 디렉터리로 재생성해도, **실제 추출된 파일 시스템 상엔 여전히 원본 파일이 남아** 있어 충돌이 반복됩니다.
3. 같은 스크립트를 여러 번 호출하면서, **파일 삭제-디렉터리 생성 로직이 완전히 적용되지 않은 상태**에서 다시 `mkdir images`를 시도합니다.

---

### ✅ 해결 방법 (수행해야 할 작업 지시)

1. **리포지토리에서 잘못된 `public` 파일 제거**

   ```bash
   # 로컬 프로젝트 루트에서
   git rm public
   git commit -m "Remove stray public file to avoid ENOTDIR conflict"
   git push origin main
   ```

   * `public` 경로는 “디렉터리”만 있어야 합니다.

2. **리팩토링: ZIP 패키지에 `public` 디렉터리만 포함되도록 설정**

   * `.gitignore`에 다음 라인을 추가하여 실수로 파일이 포함되지 않도록 방지:

     ```
     /public
     !/public/**
     ```
   * CI/CD 워크플로우(`azure/webapps-deploy`)에서 `package: ./` 대신 **`package: './dist'`** 또는 **`package: './build'`** (빌드 산출물 폴더) 경로만 지정해 불필요한 루트 파일이 포함되지 않게 변경.

3. **`startup.js` 파일 내 안전 로직 강화**

   ```js
   import fs from 'fs';
   import path from 'path';

   function ensureDir(dirPath) {
     if (fs.existsSync(dirPath) && !fs.statSync(dirPath).isDirectory()) {
       fs.unlinkSync(dirPath);
     }
     fs.mkdirSync(dirPath, { recursive: true });
   }

   // 배포 시 최초 1회만 실행하도록 감싸기
   if (!process.env._PUBLIC_INIT_DONE) {
     ensureDir(path.join(process.env.PUBLIC_PATH, 'images'));
     process.env._PUBLIC_INIT_DONE = 'true';
   }
   ```

   * `_PUBLIC_INIT_DONE` 플래그를 통해 **동일 로직 반복 실행 방지**.

4. **재빌드 및 재배포**

   ```bash
   npm run build
   git push origin main
   ```

   * GitHub Actions가 트리거되어 새로운 ZIP 패키지를 생성하고, **잘못된 `public` 파일 없이** 배포가 진행됩니다.

---

작업 완료 후 Azure App Service의 Kudu 콘솔에서 `/home/site/wwwroot/public` 경로가 **디렉터리**로만 구성되었는지 확인하고, 오류 없이 서버가 정상 구동되는지 보고하세요.
